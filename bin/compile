#!/bin/bash
# Usage: bin/compile BUILD_DIR CACHE_DIR ENV_DIR

set -e
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

PREFIX=$BUILD_DIR/.heroku/vendor
PREFIX_ORIG=/app/.heroku/vendor

PACKAGE_URL=https://github.com/kosh04/heroku-buildpack-emacs/releases/download/v1.0-beta/emacs-24.5-heroku-bin.tar.xz
PACKAGE=emacs.tar.xz

indent() {
  sed -u 's/^/       /'
}

echo "-----> Install Emacs"

install() {
    curl -fsSL -o $PACKAGE $PACKAGE_URL

    mkdir -p $PREFIX
    tar xf $PACKAGE -C $PREFIX

    # For use install Cask
    mkdir -p /app/.heroku/vendor
    tar xf $PACKAGE -C /app/.heroku/vendor
}

install_from_source() {
    local makefile="$(dirname $0)/compile.mk"
    # Note: Special variables (load-path,exec-path,etc) are determined at ./configure
    make -f $makefile build install PREFIX=$PREFIX_ORIG
    make -f $makefile install PREFIX=$PREFIX

    # require to download packages
    export PATH=$PATH:$PREFIX_ORIG/bin
}

install_from_source

emacs --version | indent

# echo "-----> Install Cask"
#
# TODO: How install cask with selected directory?
# export HOME=$BUILD_DIR
# export PATH=$PATH:$HOME/.cask/bin
# cd $HOME
# curl -fsSL "https://raw.githubusercontent.com/cask/cask/master/go" | python 2>&1 | indent
# cask install 2>&1 | indent

echo "-----> Install Package"

if [ -f $BUILD_DIR/setup-elnode.el ]; then
    HOME=$BUILD_DIR emacs --script $BUILD_DIR/setup-elnode.el | indent
else
    echo "$BUILD_DIR/setup-elnode.el not found"
fi

echo "-----> Setting config values"

mkdir $BUILD_DIR/.profile.d
cat << "EOF" > $BUILD_DIR/.profile.d/emacs.sh
PATH=$PATH:$HOME/.heroku/vendor/bin
#PATH=$PATH:$HOME/.cask/bin
LANG=${LANG:-en_US.UTF-8}
EOF
